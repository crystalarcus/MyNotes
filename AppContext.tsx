import { createContext } from "react";
type contextProps = {
    data: Note[],
    binVNData: VoiceNoteType[],
    voiceNotes: VoiceNoteType[],
    groupList: string[],
    binData: Note[],
    appTheme: string,
    accentColor: string,
    noteTemplate: number,
    noteHeight: string,
    coloredNote: boolean,
    titleFontSize: number,
    contentFontSize: number,
    showNoteBorder: boolean,
    showNoteStar: boolean,
    showNoteDate: boolean,
    showNoteActionBtns: boolean,
    titleFontFamily: string,
    contentFontFamily: string,
    titleBold: boolean,
    contentBold: boolean,
    isCompact: boolean,
    sortOrder: number,
    activeScreen: string,
    shallBinDelete: boolean,
    binDeletionTime: number,
    binDeletionTimeUnit: string,
    askBeforeDeleting: boolean,

    setData: (value: Note[] | VoiceNoteType[]) => void,
    setVoiceNotes: (value: VoiceNoteType[]) => void,
    setBinData: (value: Note[]) => void,
    setBinVNData: (value: VoiceNoteType[]) => void,
    setGroupList: (value: string[]) => void,
    setIsCompact: (value: boolean) => void,
    setAppTheme: (value: string) => void,
    setAccentColor: (value: string) => void,
    setNoteTemplate: (value: number) => void,
    setNoteHeight: (value: string) => void,
    setTitleFontSize: (value: number) => void,
    setContentFontSize: (value: number) => void,
    setTitleFontFamily: (value: string) => void,
    setContentFontFamily: (value: string) => void,
    setTitleBold: (value: boolean) => void,
    setContentBold: (value: boolean) => void,
    setColoredNote: (value: boolean) => void,
    setShowNoteBorder: (value: boolean) => void,
    setShowNoteStar: (value: boolean) => void,
    setShowNoteDate: (value: boolean) => void,
    setShowNoteActionBtns: (value: boolean) => void,
    setSortOrder: (value: number) => void,
    setActiveScreen: (value: string) => void,
    setShallBinDelete: (value: boolean) => void,
    UpdateThemeTo: (value: string) => void,
    setBinDeletionTime: (value: number) => void,
    setBinDeletionTimeUnit: (value: string) => void,
    setAskBeforeDeleting: (value: boolean) => void,
}
export const AppContext = createContext<contextProps>({
    titleFontSize: 120,
    contentFontSize: 80,
    data: [],
    voiceNotes: [],
    binVNData: [],
    binData: [],
    groupList: [],
    appTheme: 'system',
    accentColor: '#9C4237',
    noteTemplate: 1,
    noteHeight: 'medium',
    isCompact: false,
    coloredNote: true,
    showNoteBorder: false,
    showNoteStar: true,
    showNoteDate: true,
    showNoteActionBtns: true,
    titleFontFamily: "Manrope",
    contentFontFamily: "Manrope",
    titleBold: true,
    contentBold: false,
    sortOrder: 1,
    activeScreen: 'All Notes',
    shallBinDelete: true,
    binDeletionTime: 3,
    binDeletionTimeUnit: 'Months',
    askBeforeDeleting: true,

    setData: () => { },
    setVoiceNotes: () => { },
    setBinData: () => { },
    setBinVNData: () => { },
    setGroupList: () => { },
    setIsCompact: () => { },
    setAppTheme: () => { },
    setAccentColor: () => { },
    setNoteTemplate: () => { },
    setNoteHeight: () => { },
    setTitleFontSize: () => { },
    setContentFontSize: () => { },
    setTitleFontFamily: () => { },
    setContentFontFamily: () => { },
    setTitleBold: () => { },
    setContentBold: () => { },
    setColoredNote: () => { },
    setShowNoteBorder: () => { },
    setShowNoteStar: () => { },
    setShowNoteDate: () => { },
    setShowNoteActionBtns: () => { },
    setSortOrder: () => { },
    setActiveScreen: () => { },
    setShallBinDelete: () => { },
    UpdateThemeTo: () => { },
    setBinDeletionTime: () => { },
    setBinDeletionTimeUnit: () => { },
    setAskBeforeDeleting: () => { },
});
export const AppContext2 = createContext([{}, () => { }]);
export const AppContext3 = createContext([{}, () => { }]);
export const NavContext = createContext([{}, () => { }]);
